# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Release

on:
  push:
    tags: ['v[0-9].[0-9]+.[0-9]+']

jobs:
  build-windows-latest:
    runs-on: windows-latest
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Download Auto Py to Exe
      run: |
        git clone https://github.com/brentvollebregt/auto-py-to-exe.git
        cd auto-py-to-exe
        python -m pip install -r requirements.txt
    - name: Build exe for distribution
      run: |
        pyinstaller --noconfirm --onedir --windowed --icon "./_internal/favicon.ico" --name "dynu_updater" --clean --add-data "./dynu_updater/__init__.py:." --add-data "./dynu_updater/autoupdateipthread.py:." --add-data "./dynu_updater/countdownthread.py:." --add-data "./dynu_updater/gui.py:." --add-data "./_internal/favicon.ico:."  "./main.py"
    - name: Zip Folder
      run: |
        cd ./dist/dynu_updater
        powershell Compress-Archive ./* dynu_updater_windows.zip
    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Nightly Release for Python ${{ matrix.python-version }}
        fail_on_unmatched_files: true
        draft: false
        files: |
          ./dist/dynu_updater/dynu_updater_windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
